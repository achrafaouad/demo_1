{"version":3,"sources":["app/MyMap.js","app/dashboard/Dashboard.js"],"names":["PublicMap","props","handleChange","address","setState","state","center","zoom","source","VectorSource","wrapX","classname","vector","olVectorLayer","style","Style","fill","Fill","color","stroke","Stroke","width","draw","olmap","OlMap","target","controls","scscaleline","fullscreen","Zoom","ZoomSlider","OverviewMap","layers","OlLayerTile","OlSourcexyz","url","maxZoom","minZoom","view","OlView","bind","handleSelect","addInteraction","this","getView","setCenter","setZoom","setTarget","on","getCenter","getZoom","e","console","log","coordinate","document","getElementById","addEventListener","removeInteraction","removeLastPoint","Draw","type","nextProps","nextState","long","lat","transform","updateMap","Fragment","id","className","height","visible","margin","onPlaceSelected","place","geometry","location","lng","CenterMap","types","componentRestrictions","country","Component","mapData","Dashboard","transactionHistoryOptions","responsive","maintainAspectRatio","segmentShowStroke","cutoutPercentage","elements","arc","borderWidth","legend","display","tooltips","enabled","sliderSettings","infinite","speed","slidesToShow","slidesToScroll","history","querySelector","classList","toggle","MyMap","map","backgroundColor","panOnDrag","containerClassName","focusOn","x","y","scale","animate","series","regions","normalizeFunction","values"],"mappings":"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","file":"static/js/13.52380c72.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport OlMap from \"ol/Map\";\r\nimport OlView from \"ol/View\";\r\nimport OlLayerTile from \"ol/layer/Tile\";\r\nimport scscaleline from 'ol/control/ScaleLine';\r\nimport fullscreen from 'ol/control/FullScreen';\r\nimport mouseposition from 'ol/control/MousePosition';\r\nimport OlSourcexyz from \"ol/source/XYZ\";\r\nimport Draw from \"ol/interaction/Draw\";\r\nimport VectorSource from 'ol/source/Vector';\r\nimport olVectorLayer from 'ol/layer/Vector';\r\nimport Style from 'ol/style/Style';\r\nimport Fill from 'ol/style/Fill';\r\nimport Stroke from 'ol/style/Stroke';\r\nimport Autocomplete from \"react-google-autocomplete\";\r\nimport {transform} from 'ol/proj.js';\r\n\r\nimport \"ol/ol.css\";\r\nimport Zoom from \"ol/control/Zoom\"\r\nimport ZoomSlider from 'ol/control/ZoomSlider';\r\nimport OverviewMap from 'ol/control/OverviewMap';\r\n\r\nclass PublicMap extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = { center: [-777823.1998299537, 3502650.384139917], zoom: 5 , source : new VectorSource({wrapX: false}), classname: false};\r\n    this.vector = new olVectorLayer({\r\n      source: this.state.source,\r\n      style: new Style({\r\n        fill: new Fill({\r\n          color: 'rgba(255, 255, 255, 0.2)',\r\n        }),\r\n        stroke: new Stroke({\r\n          color: '#ffcc33',\r\n          width: 2,\r\n        })\r\n      })\r\n    });\r\n\r\n    this.draw = '';\r\n\r\n\r\n    this.olmap = new OlMap({\r\n      target: null,\r\n      controls:[new scscaleline(),new fullscreen(),new Zoom(),new ZoomSlider(),new OverviewMap()],\r\n      layers: [\r\n      new OlLayerTile({\r\n        source: new OlSourcexyz({\r\n          url: 'https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}',\r\n          maxZoom: 15,\r\n          minZoom:5\r\n        })\r\n      }),\r\n      this.vector\r\n      ],\r\n\r\n      view: new OlView({\r\n        center: this.state.center,\r\n        zoom: this.state.zoom,\r\n        minZoom:2\r\n      })\r\n    });\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSelect = this.handleSelect.bind(this);\r\n    this.addInteraction = this.addInteraction.bind(this);\r\n  }\r\n\r\n  handleChange = address => {\r\n    this.setState({ address });\r\n  };\r\n  handleSelect(){\r\n\r\n  }\r\n\r\n  updateMap() {\r\n    this.olmap.getView().setCenter(this.state.center);\r\n    this.olmap.getView().setZoom(this.state.zoom);\r\n  }\r\n\r\n  componentDidMount() {\r\n    \r\n    this.olmap.setTarget(\"map\");\r\n    // Listen to map changes\r\n    this.olmap.on(\"moveend\", () => {\r\n      let center = this.olmap.getView().getCenter();\r\n      let zoom = this.olmap.getView().getZoom();\r\n      this.setState({ center, zoom });\r\n    });\r\n\r\n     this.olmap.on('click', (e) => {\r\n         console.log(e.coordinate)\r\n      });\r\n  \r\n    //drawing polygon\r\n    document.getElementById('drow_polygone').addEventListener('click' ,() => \r\n    {\r\n    this.setState({classname:true})\r\n    this.olmap.removeInteraction(this.draw);\r\n    this.addInteraction()\r\n  }\r\n    )\r\n\r\n  \r\n      document.getElementById('undo').addEventListener('click', () => {if(this.draw){this.draw.removeLastPoint()}});\r\n    \r\n    \r\n\r\n\r\n  }\r\n  \r\n  addInteraction() {\r\n\r\n      this.draw = new Draw({\r\n        source: this.state.source,\r\n        type: 'Polygon',\r\n      });\r\n      this.olmap.addInteraction(this.draw);\r\n  }\r\n  \r\n\r\n\r\n  shouldComponentUpdate(nextProps, nextState) {\r\n    let center = this.olmap.getView().getCenter();\r\n    let zoom = this.olmap.getView().getZoom();\r\n    if (center === nextState.center && zoom === nextState.zoom) return false;\r\n    return true;\r\n  }\r\n\r\n  CenterMap(long, lat) {\r\n    console.log(\"Long: \" + long + \" Lat: \" + lat);\r\n    this.olmap.getView().setCenter(transform([long, lat], 'EPSG:4326', 'EPSG:3857'));\r\n    this.olmap.getView().setZoom(15);\r\n}\r\n\r\n  render() {\r\n    this.updateMap(); // Update map on render?\r\n    return (\r\n      <React.Fragment>\r\n      <div id=\"map\" className='grid-margin' style={{ width: \"100%\", height: \"auto\" }}>\r\n      \r\n      <div className=\"d-grid gap-2 d-md-flex justify-content-md-end  add_polygone\">\r\n        \r\n        <button visible type=\"button\" className=\"btn btn-success btn-fw \" id=\"drow_polygone\">\r\n        + Add polygone\r\n        </button>\r\n        <button className=\"btn btn-danger me-md-2 \"  type=\"button\" id=\"undo\" >undo</button>\r\n        </div>\r\n       \r\n\r\n        <div className=\"input-group flex-nowrap \" style={{ width: \"30%\", height: \"auto\",margin:'20px' }} >\r\n        <div>\r\n         <Autocomplete\r\n         className=\"input-group flex-nowrap\"\r\n        style={{ width: \"100%\" }}\r\n        onPlaceSelected={(place) => {\r\n          console.log(\r\n            \"Places\",\r\n            place.geometry.location.lat(),\r\n            place.geometry.location.lng()\r\n          );\r\n          this.CenterMap(place.geometry.location.lng(), place.geometry.location.lat());\r\n          \r\n        }}\r\n        types={[\"(regions)\"]}\r\n        componentRestrictions={{ country: \"ma\" }}\r\n      />\r\n          </div>\r\n        \r\n        </div>\r\n\r\n        \r\n      </div>\r\n      \r\n            </React.Fragment>\r\n      \r\n    );\r\n  }\r\n}\r\n\r\nexport default PublicMap;\r\n","import React, { Component } from 'react';\nimport { VectorMap } from \"react-jvectormap\"\nimport MyMap from \"../MyMap\";\n\n\nconst mapData = {\n  \"BZ\": 75.00,\n  \"US\": 56.25,\n  \"AU\": 15.45,\n  \"GB\": 25.00,\n  \"RO\": 10.25,\n  \"GE\": 33.25\n}\n\nexport class Dashboard extends Component {\n  \nconstructor(props){\n  super(props);\n  console.log('achraf');\n  console.log(this.props.history.location.state);\n}\n    //other functions eliminated for brevity\n    //other functions eliminated for brevity\n  transactionHistoryOptions = {\n    responsive: true,\n    maintainAspectRatio: true,\n    segmentShowStroke: false,\n    cutoutPercentage: 70,\n    elements: {\n      arc: {\n          borderWidth: 0\n      }\n    },      \n    legend: {\n      display: false\n    },\n    tooltips: {\n      enabled: true\n    }\n  }\n\n  sliderSettings = {\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1\n  }\n\n  toggleProBanner() {\n    document.querySelector('.proBanner').classList.toggle(\"hide\");\n  }\n  \n  render () {\n    return (\n      <div>\n        <div className=\"row \">\n          <div className=\"col-12 grid-margin\">\n            <div className=\"card\">\n              <div className=\"card-body\" >\n                <h4 className=\"card-title\">My map</h4>\n                <MyMap/>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"row\">\n          <div className=\"col-12\">\n            <div className=\"card\">\n              <div className=\"card-body\">\n                <h4 className=\"card-title\">Visitors by Countries</h4>\n                <div className=\"row\">\n                  <div className=\"col-md-5\">\n                    <div className=\"table-responsive\">\n                      <table className=\"table\">\n                        <tbody>\n                          <tr>\n                            <td>\n                              <i className=\"flag-icon flag-icon-us\"></i>\n                            </td>\n                            <td>USA</td>\n                            <td className=\"text-right\"> 1500 </td>\n                            <td className=\"text-right font-weight-medium\"> 56.35% </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <i className=\"flag-icon flag-icon-de\"></i>\n                            </td>\n                            <td>Germany</td>\n                            <td className=\"text-right\"> 800 </td>\n                            <td className=\"text-right font-weight-medium\"> 33.25% </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <i className=\"flag-icon flag-icon-au\"></i>\n                            </td>\n                            <td>Australia</td>\n                            <td className=\"text-right\"> 760 </td>\n                            <td className=\"text-right font-weight-medium\"> 15.45% </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <i className=\"flag-icon flag-icon-gb\"></i>\n                            </td>\n                            <td>United Kingdom</td>\n                            <td className=\"text-right\"> 450 </td>\n                            <td className=\"text-right font-weight-medium\"> 25.00% </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <i className=\"flag-icon flag-icon-ro\"></i>\n                            </td>\n                            <td>Romania</td>\n                            <td className=\"text-right\"> 620 </td>\n                            <td className=\"text-right font-weight-medium\"> 10.25% </td>\n                          </tr>\n                          <tr>\n                            <td>\n                              <i className=\"flag-icon flag-icon-br\"></i>\n                            </td>\n                            <td>Brasil</td>\n                            <td className=\"text-right\"> 230 </td>\n                            <td className=\"text-right font-weight-medium\"> 75.00% </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n                  <div className=\"col-md-7\">\n                    <div id=\"audience-map\" className=\"vector-map\"></div>\n                    <VectorMap\n                    map={\"world_mill\"}\n                    backgroundColor=\"transparent\" //change it to ocean blue: #0077be\n                    panOnDrag={true}\n                    containerClassName=\"dashboard-vector-map\"\n                    focusOn= { {\n                      x: 0.5,\n                      y: 0.5,\n                      scale: 1,\n                      animate: true\n                    }}\n                    series={{\n                      regions: [{\n                        scale: ['#3d3c3c', '#f2f2f2'],\n                        normalizeFunction: 'polynomial',\n                        values: mapData\n                      }]\n                    }}\n                  />\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div> \n    );\n  }\n}\n\nexport default Dashboard;"],"sourceRoot":""}