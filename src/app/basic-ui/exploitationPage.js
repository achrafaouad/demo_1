import React, { Component } from "react";
import OlMap from "ol/Map";
import OlView from "ol/View";
import OlLayerTile from "ol/layer/Tile";
import OlSourcexyz from "ol/source/XYZ";
import VectorSource from "ol/source/Vector";
import olVectorLayer from "ol/layer/Vector";
import Style from "ol/style/Style";
import Fill from "ol/style/Fill";
import Stroke from "ol/style/Stroke";
import GeoJSON from "ol/format/GeoJSON";
import "ol/ol.css";
import Popup from "./popupAddAnimal";
import Alimantation from "./alimentation";
import AnimalTable from "./animalTable";
const style = {
    display: "grid",
    gridTemplateColumns: "50%  50%"}

class ExploitationPage extends Component{
    constructor(props){
        super(props);
        var choosen = this.props.exploitation
        var mycenter = JSON.parse(choosen.geometry).coordinates[0][0]
        console.log(mycenter)

        this.state={choosen:choosen ,center: mycenter,
            zoom: 7}
        this.arcgisMap = new OlLayerTile({
            source: new OlSourcexyz({
              url: "https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",
              maxZoom: 15,
              minZoom: 5,
            }),
          });
          this.olmap = new OlMap({
            target: null,
            
            layers: [
                this.arcgisMap],
      
              view: new OlView({
              center: this.state.center,
              zoom: this.state.zoom,
              minZoom: 2,
            }),
          });


    this.mediumLow = new VectorSource();
    this.mediumLowVector = new olVectorLayer({
      title: "medium low Risk",

      source: this.mediumLow,

      style: new Style({
        stroke: new Stroke({
          // color: symbolLineColor,

          width: 1,

          // lineDash: [4, 8]
        }),

        fill: new Fill({
          color: "#FFC100",
        }),
      }),
    });
    this.format = new GeoJSON();


    }
    updateMap() {
        console.log("update_map");
        this.olmap.getView().setCenter(this.state.center);
        this.olmap.getView().setZoom(this.state.zoom);
      }

    async fetch_data() {

        fetch("http://localhost:3001/getFoncierDisposé", {
            method: "POST",
            body: {id:50},
          })
            .then(
              (response) => {
                if (response.ok) {
                  return response.json();
                }
                throw new Error("request failed");
              },
              (networkError) => console.log(networkError)
            )
            .then((responseJson) => {
              console.log(responseJson);
              this.setState({ src: responseJson });
            });
        }

        componentDidMount(){
            console.log("hello world ha l map");
            this.olmap.setTarget("map1");
    this.olmap.on("moveend", () => {
        let center = this.olmap.getView().getCenter();
        let zoom = this.olmap.getView().getZoom();
        this.setState({ center, zoom });
      });
      
      
        // let jsonData = JSON.parse(geometry)
        // jsonData["crs"] = {"type":"name","properties":{"name":"EPSG:3857"}}
        
        if(this.state.choosen.geometry){
        this.mediumLow.addFeatures(
          this.format.readFeatures(this.state.choosen.geometry, { featureProjection: "EPSG:3857" })
        );
  
        this.olmap.addLayer(this.mediumLowVector);
     
        }
    }

        
        
           

    render(){
        return (<>
            { (this.state.choosen) && <>
                <button type="button" style={{width:"80px",margin:"20px"}} class="btn btn-success btn-sm" onClick ={()=> this.props.retour()}>retour</button>
             <h1 style={{color:"#ffff"}}>Détails de l'exploitation</h1>
             <hr style={{border: ".5px solid white"}}/>
            <div class="grid-container" style={style}>
            <div class="grid-item">
            <h3 style={{color:"#ffff"}}>Information sur la parcelle</h3>
            <hr style={{border: ".2px solid white"}}/>
            <div style={{margin: "15px",color:"white"}}>
            
            <div  >
                <strong> Nom</strong> : {this.state.choosen.nom}
                
              </div>
            <div>
                <strong> Date_exploitation</strong> : {this.state.choosen.date_exploitation}
                
              </div>
            <div>
                <strong> Note</strong> : {this.state.choosen.note}
                
              </div>
            <div>
                <strong> Batiment</strong> : {String(this.state.choosen.batiment)}
                
              </div>
              <div>
                <strong> Surface</strong> : {this.state.choosen.surface} ha
                
              </div>
              
            </div>
            </div>
            <div class="grid-item">
                    <div
                    id="map1"
                    className="grid-margin"
                    style={{ width: "100%", height: "auto" }}
                >
          </div>
          <Popup id={this.state.choosen.id_exploitation}/>
          <Alimantation id={this.state.choosen.id_exploitation}/>
          
            </div>
            </div>
            <AnimalTable id={this.state.choosen.id_exploitation}/>
            </>}
        </>)
    }
}

export default ExploitationPage;