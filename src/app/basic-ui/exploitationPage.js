import React, { Component } from "react";
import OlMap from "ol/Map";
import OlView from "ol/View";
import OlLayerTile from "ol/layer/Tile";
import OlSourcexyz from "ol/source/XYZ";
import VectorSource from "ol/source/Vector";
import olVectorLayer from "ol/layer/Vector";
import Style from "ol/style/Style";
import Fill from "ol/style/Fill";
import Stroke from "ol/style/Stroke";
import GeoJSON from "ol/format/GeoJSON";
import  "./StyleResp.css";
import "ol/ol.css";
import Popup from "./popupAddAnimal";
import Alimantation from "./alimentation";
import AnimalTable from "./animalTable";
import 'antd/dist/antd.css';
import { Tabs } from 'antd';
import { format } from 'date-fns';
import './StyleResp.css';
import ModifierExpAnn from "./ModifierExploitationAnn";
import Collect from "./CollectionProduit";
const { TabPane } = Tabs;
const style = {
  display: "grid",
  gridTemplateColumns: "50%  50%",
};
function callback(key) {
  console.log(key);
}

class ExploitationPage extends Component {
  constructor(props) {
    console.log("hello world ha l map constructor");
    super(props);
    var choosen = this.props.exploitation;
    var mycenter = JSON.parse(choosen.geometry).coordinates[0][0];
    console.log(mycenter);
    let zoom1 = choosen.surface > 10 ? 10 : 16;
    this.state = {
      choosen: choosen,
      center: mycenter,
      afficher_animal: false,
      zoom: zoom1,
    };

    console.log("ha state", this.state);
    this.afficher_animal = this.afficher_animal.bind(this);
    this.arcgisMap = new OlLayerTile({
      source: new OlSourcexyz({
        url: "https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}",
        maxZoom: 15,
        minZoom: 5,
      }),
    });
    this.olmap = new OlMap({
      target: null,

      layers: [this.arcgisMap],

      view: new OlView({
        center: this.state.center,
        zoom: this.state.zoom,
        minZoom: 2,
      }),
    });

    this.mediumLow = new VectorSource();
    this.mediumLowVector = new olVectorLayer({
      title: "medium low Risk",

      source: this.mediumLow,

      style: new Style({
        stroke: new Stroke({
          // color: symbolLineColor,

          width: 1,

          // lineDash: [4, 8]
        }),

        fill: new Fill({
          color: "#FFC100",
        }),
      }),
    });
    this.format = new GeoJSON();
  }

  updateMap() {
    console.log("update_map");
    this.olmap.getView().setCenter(this.state.center);
    this.olmap.getView().setZoom(this.state.zoom);
  }

  async fetch_data() {
    fetch("http://localhost:3001/getFoncierDisposé", {
      method: "POST",
      body: { id: 50 },
    })
      .then(
        (response) => {
          if (response.ok) {
            return response.json();
          }
          throw new Error("request failed");
        },
        (networkError) => console.log(networkError)
      )
      .then((responseJson) => {
        console.log(responseJson);
        this.setState({ src: responseJson });
      });
  }

  componentDidMount() {
    console.log("hello world ha l map rje3t");
    this.olmap.setTarget("map1");
    this.olmap.on("moveend", () => {
      let center = this.olmap.getView().getCenter();
      let zoom = this.olmap.getView().getZoom();
      this.setState({ center, zoom });
    });

    // let jsonData = JSON.parse(geometry)
    // jsonData["crs"] = {"type":"name","properties":{"name":"EPSG:3857"}}

    if (this.state.choosen.geometry) {
      this.mediumLow.addFeatures(
        this.format.readFeatures(this.state.choosen.geometry, {
          featureProjection: "EPSG:3857",
        })
      );

      this.olmap.addLayer(this.mediumLowVector);
    }
  }

  afficher_animal() {
    let afficher = this.state.afficher_animal === true ? false : true;
    this.setState({ afficher_animal: afficher });
  }

  render() {
    return (
      <>
        {!this.state.afficher_animal && (
          <>
            <button
              type="button"
              style={{ width: "80px", margin: "20px" }}
              class="btn btn-success btn-sm"
              onClick={() => this.props.retour()}
            >
              retour
            </button>
            <h1 style={{ color: "#ffff" ,textAlign:"center" }}>Détails de l'exploitation</h1>
            <hr class="style18"/>
           
          <div class="container">
           <div class="row">

           

              <div class="col-sm">
                
                <div
                  style={{ color: "black", width: "96%" }}
                  className=" tc grow bg-near-white br3 pa3 ma2 dib bw2 shadow-5"
                >
                  <h3 style={{ color: "#434c5e" }}>
                    Information sur la parcelle
                  </h3>
                  <hr class="style18"/>

                  <div>
                    <strong> Nom</strong> : {this.state.choosen.nom}
                  </div>
                  <div>
                    <strong> Date d'exploitation</strong> :{" "}
                    {  format(new Date(this.state.choosen.date_exploitation), 'dd/MM/yyyy')
                             }
                  </div>
                  <div>
                    <strong> Note</strong> : {this.state.choosen.note}
                  </div>
                  <div>
                    <strong> Batiment</strong> :{" "}
                    {(!this.state.choosen.batiment)?'-':'oui'}
                  </div>
                  <div>
                    <strong> Espece</strong> :{" "}
                    {(!this.state.choosen.type)?'-':this.state.choosen.type}
                  </div>
                  <div>
                    <strong> Surface</strong> : {Math.round(this.state.choosen.surface)} ha
                  </div>
                </div>
                


              </div>

              <div class="col-sm">
                <div
                  id="map1"
                  className="grid-margin"
                  style={{ width: "100%", height: "auto" }}
                ></div>
                
              </div>

              <div class="container">
                <div class="row">

                      <div class="col-sm" style={{width:"100%", margin:'10px'}}> <Popup id={this.state.choosen.id_exploitation} /> </div>
                      <div class="col-sm" style={{width:"100%", margin:'10px'}}><Alimantation id={this.state.choosen.id_exploitation} /> </div>
                      <div class="col-sm" style={{width:"100%", margin:'10px'}}><ModifierExpAnn expl={this.state.choosen} /> </div> 
                      <div class="col-sm" style={{width:"100%", margin:'10px'}}> <Collect expl={this.state.choosen} />              </div> 
                   </div>
                </div>
             


              </div>

           
            </div>
          </>
        )}

        
        <AnimalTable
          id={this.state.choosen.id_exploitation}
          afficher_animal={this.afficher_animal}
        />
      </>
    );
  }
}

export default ExploitationPage;
